services:
  db:
    image: postgres:12.22-alpine3.21
    # user: "${UID}:${GID}"
    hostname: db.example.com
    restart: always
    env_file:
      - ./.env-postgres
    ports:
      - "${POSTGRES_PUBLISHED_PORTS:-127.0.0.1:5432}:5432"
    volumes:
      - type: bind
        source: ./mount/db
        target: /var/lib/postgresql/data
        bind:
          propagation: rprivate
    logging: &loggers
      driver: "json-file"
      options:
        max-size: 3m
        max-file: "3"
  redis-cache:
    image: redis:7.4.2-alpine3.21

  redis-tasks:
    image: redis:7.4.2-alpine3.21
    command: redis-server --appendonly yes
    volumes:
      - type: bind
        source: ./mount/redis-tasks
        target: /data
        bind:
          propagation: rprivate
  test_foreman: &foreman_app_base
    image: local/foreman
    build:
      context: .
      dockerfile: foreman.dockerfile
    entrypoint: "entrypoint-with-db-init.sh"
    command: bundle exec bin/rails server -b 0.0.0.0
    env_file:
      - ./.env-foreman
    hostname: foreman.example.com
    depends_on:
      - db
      - redis-cache
      - redis-tasks
    links:
      - db
      - redis-cache
      - redis-tasks
    ports:
      # - "${FOREMAN_IP:-127.0.0.1}:3000:3000"
      - 3000:3000
      - "${FOREMAN_IP:-127.0.0.1}:5910-5930:5910-5930"
    healthcheck:
      test: ["CMD-SHELL", "nc -z 127.0.0.1 3000 || exit 1"]
      interval: 5m
      start_period: 1m
    logging:
      <<: *loggers
    
  orchestrator:
    <<: *foreman_app_base
    entrypoint: "entrypoint.sh"
    command: bundle exec sidekiq -r ./extras/dynflow-sidekiq.rb -c 1 -q dynflow_orchestrator
    hostname: orchestrator.example.com
    ports: []

  worker:
    <<: *foreman_app_base
    entrypoint: "entrypoint.sh"
    command: bundle exec sidekiq -r ./extras/dynflow-sidekiq.rb -c 15 -q default,1 -q remote_execution,1
    ports: []

  
